name: CI

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npm run lint
      - name: Run TypeScript type check
        run: npm run type-check
      - name: Run tests
        run: npm test -- --coverage
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: coverage

  build:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Use Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Build web application
        run: npm run build:web
      - name: Build Chrome extension
        run: npm run build:extension
      - name: Archive web build
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: apps/web/.next
      - name: Archive extension build
        uses: actions/upload-artifact@v3
        with:
          name: extension-build
          path: apps/extension/dist

  coverage-report:
    name: Upload Coverage Report
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Download test coverage
        uses: actions/download-artifact@v3
        with:
          name: coverage-report
          path: coverage
      - name: Publish coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: coverage/**/*.json
          fail_ci_if_error: true